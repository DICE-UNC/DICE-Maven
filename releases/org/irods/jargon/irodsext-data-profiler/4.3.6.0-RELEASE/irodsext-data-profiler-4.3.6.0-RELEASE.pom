<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>jargon-irods-ext</artifactId>
		<groupId>org.irods.jargon</groupId>
		<version>4.3.6.0-RELEASE</version>
	</parent>
	<artifactId>irodsext-data-profiler</artifactId>
	<name>irodsext-data-profiler</name>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.irods.jargon</groupId>
			<artifactId>jargon-core</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.irods.jargon</groupId>
			<artifactId>jargon-zipservice</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.irods.jargon</groupId>
			<artifactId>jargon-ticket</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.irods.jargon</groupId>
			<artifactId>irodsext-data-typer</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.irods.jargon</groupId>
			<artifactId>emc-metalnx-core</artifactId>
			<version>${project.version}</version>
			<exclusions>
				<exclusion>
					<groupId>xml-apis</groupId>
					<artifactId>xml-apis</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
		</dependency>
	</dependencies>
	<description>Represents a high-level summary of a data object or collection, gathering metadata, ACL information, and other facets of a data object or collection, suitable for presentation in an interface.  This includes awareness of applicable special metadata types as well as any rules or operations associated with a collection or file</description>
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>0</id>
						<phase>validate</phase>
						<configuration>
							<target>
								<delete file="${basedir}/src/test/resources/testing.properties" />
								<touch file="${basedir}/src/test/resources/testing.properties"
									mkdirs="true" />
								<echo file="${basedir}/src/test/resources/testing.properties"
									append="true">
									test.confirm=${jargon.test.confirm}
									test.data.directory=${jargon.test.data.directory}
									test.irods.admin=${jargon.test.irods.admin}
									test.irods.admin.password=${jargon.test.irods.admin.password}
									test.irods.user=${jargon.test.irods.user}
									test.irods.password=${jargon.test.irods.password}
									test.irods.resource=${jargon.test.irods.resource}
									test2.irods.user=${jargon.test.irods.user2}
									test2.irods.password=${jargon.test.irods.password2}
									test2.irods.resource=${jargon.test.irods.resource2}
									test3.irods.user=${jargon.test.irods.user3}
									test3.irods.password=${jargon.test.irods.password3}
									test3.irods.resource=${jargon.test.irods.resource3}
									test.irods.host=${jargon.test.irods.host}
									test.irods.port=${jargon.test.irods.port}
									test.irods.zone=${jargon.test.irods.zone}
									test.resource.group=${jargon.test.resource.group}
									test.irods.userDN=${jargon.test.irods.userDN}
									test.irods.scratch.subdir=${jargon.test.irods.scratch.subdir}
									test.option.exercise.remoteexecstream=${jargon.test.option.exercise.remoteexecstream}
								</echo>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<!-- generate metalnx test properties as standard -->
						<id>2</id>
						<phase>validate</phase>
						<configuration>
							<target>
								<delete file="${basedir}/src/test/resources/test.metalnx.properties" />
								<touch file="${basedir}/src/test/resources/test.metalnx.properties"
									mkdirs="true" />
								<echo file="${basedir}/src/test/resources/test.metalnx.properties"
									append="true">
									irods.host=${jargon.test.irods.host}
									irods.port=${jargon.test.irods.port}
									irods.zoneName=${jargon.test.irods.zone}
									irods.admin.user=${jargon.test.irods.admin}
									irods.admin.password=${jargon.test.irods.admin.password}


									irods.auth.scheme=${metalnx.auth.scheme}
									default.storage.resource=${jargon.test.irods.resource}
									ssl.negotiation.policy=${metalnx.ssl.policy}

									##########################################################

									utilize.packing.streams=${metalnx.packing.streams}


									compute.checksum=${metalnx.compute.checksum}

									##########################################################

									db.driverClassName=${metalnx.jdbc.driver}
									db.url=${metalnx.jdbc.url}
									db.username=${metalnx.jdbc.user}
									db.password=${metalnx.jdbc.password}
									hibernate.dialect=${metalnx.jdbc.dialect}


									hibernate.show_sql=true
									hibernate.format_sql=false


									hibernate.hbm2ddl.auto=update


									connection.pool_size=5

									######################################

									rmd.connection.timeout=500
									rmd.connection.port=8000

									reverse.dns.lookup=false

									######################################

									populate.msi.enabled=false
									illumina.msi.enabled=true

									msi.api.version=1.X.X

									msi.metalnx.list=libmsiget_illumina_meta.so,libmsiobjget_microservices.so,libmsiobjget_version.so,libmsiobjjpeg_extract.so,libmsiobjput_mdbam.so,libmsiobjput_mdbam.so,libmsiobjput_mdmanifest.so,libmsiobjput_mdvcf.so,libmsiobjput_populate.so

									msi.irods.list=libmsisync_to_archive.so,libmsi_update_unixfilesystem_resource_free_space.so,libmsiobjput_http.so,libmsiobjput_irods.so,libmsiobjget_irods.so,libmsiobjget_http.so,libmsiobjput_slink.so,libmsiobjget_slink.so

									msi.irods.42.list=libmsisync_to_archive.so,libmsi_update_unixfilesystem_resource_free_space.so

									msi.other.list=

									resource.location.images=/images/,classpath:static/images/
									resource.location.fonts=/fonts/,classpath:static/fonts/
									resource.location.css=/css/,classpath:static/css/
									resource.location.js=/js/,classpath:static/js/
									resource.location.i18=classpath:i18n/messages
									resource.location.i18-users=classpath:i18n-users/messages

								</echo>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<debug>true</debug>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
